<?xml version="1.0" encoding="UTF-8"?>
<!-- - mapper 파일은 특정 테이블에 대한 SQL 구문을 보관하는 파일이다. 
	- mybatis를 이용하는 개발자는 이곳에 저장된 SQL구문을 아이디를 이용해서 호출한다. 
	- 파일마다 동일한 아이디로 인해 발생하는 충돌을 방지하기 위한 고유한 namespace를 사용한다. 
	- 만약 namespace가 olympic이고 구문 아이디가 list라면 외부에서는 olympic.list로 호출한다. 
	- 일반적으로 namespace는 테이블명으로 한다. - mapper 내부에는 다음 종류 태그로 구문을 저장할 수 있다. 
		- <insert> 
		- <select> 
		- <update> 
		- <delete> 
	- 각 구문은 반드시 아이디를 가져야 한다. 
	- 각 구문에는 다음과 같은 속성을 작성할 수 있다. 
		- parameterType: 해당 구문이 실행되기 위해 필요한 데이터의 자료형을 적는다.(1개만 작성 가능) 
		- resultType: 해당 구문의 실행 결과를 변경하기 위한 자료형(1개만 작성 가능, 필수) 
	- 각 구문에는 데이터를 다음과 같이 바인딩 할 수 있다. 
		- 정적 바인딩 : ${이름} 형태로 작성하면 어떠한 추가 작업도 없이 해당 위치에 데이터가 그대로 작성된다
		- 동적 바인딩: #{이름} 형태로 작성하면 자동으로 자료형에 맞게 해당 데이터를 추출하여 작성해준다.(DTO변수명) -->
		
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mbtiBoard">

	<!-- mbti board 목록 -->
	
	<select id="list" parameterType="Map" resultType="MbtiBoardDto">

	 		select * from mbti_board 
	 		<if test ="type != null and keyword !=null">
	 		<![CDATA[where instr(${type}, #{keyword}) > 0]]>
	 		</if>
	 		order by mbti_board_no asc
	
	</select>
	
	
	<!-- ResultMap 조회 -->
	
	<resultMap type="MbtiMemberListVO" id="mbtiboardMap">
		<association property="mbtiBoardDto" javaType="MbtiBoardDto">
			<result column="mbti_board_no" property="mbtiBoardNo"/>
			<result column="member_no" property="memberNo"/>
			<result column="mbti_board_title" property="mbtiBoardTitle"/>
			<result column="mbti_board_content" property="mbtiBoardContent"/>
			<result column="mbti_board_time" property="mbtiBoardTime"/>
			<result column="mbti_board_vote1" property="mbtiBoardVote1"/>
			<result column="mbti_board_vote2" property="mbtiBoardVote2"/>
			<result column="mbti_board_reply_count" property="mbtiBoardReplyCount"/>
		</association>
		
		<association property="memberDto" javaType="MemberDto">
			<result column="member_no" property="memberNo"/>
			<result column="member_email" property="memberEmail"/>
			<result column="member_pw" property="memberPw"/>
			<result column="member_nick" property="memberNick"/>
			<result column="member_gender" property="memberGender"/>
			<result column="member_mbti" property="memberMbti"/>
			<result column="member_animal" property="memberAnimal"/>
			<result column="member_interest1" property="memberInterest1"/>
			<result column="member_interest2" property="memberInterest2"/>
			<result column="member_interest3" property="memberInterest3"/>
			<result column="member_place1" property="memberPlace1"/>
			<result column="member_place2" property="memberPlace2"/>
			<result column="member_place3" property="memberPlace3"/>
			<result column="member_admin" property="memberAdmin"/>
			<result column="member_report_count" property="memberReportCount"/>
			<result column="member_club_count" property="memberClubCount"/>
			<result column="member_sns_id" property="memberSnsId"/>
			<result column="member_logindate" property="memberLogindate"/>
			<result column="member_birth" property="memberBirth"/>
			<result column="member_name" property="memberName"/>
		</association>
	
	</resultMap>
	
	<select id="mbtiboardList" resultMap="mbtiboardMap">
		select * from (
				select * from mbti_board B
      		join member M on B.member_no = M.member_no
    	<if test ="type != null and keyword !=null">
	 		<![CDATA[where instr(${type}, #{keyword}) > 0]]>
	 		</if>
		)
	</select>
	
		<select id="mbtiboardList2" resultMap="mbtiboardMap">
		select * from (
			select rownum rn, TMP.* from (
				select * from mbti_board B
      		join member M on B.member_no = M.member_no
    	<if test ="keyword !=null">
	 		<![CDATA[
	 		where instr(mbti_board_title, #{keyword}) > 0
	 		or instr(mbti_board_content, #{keyword}) > 0
	 		order by B.mbti_board_time desc
	 		]]>
	 		</if>
		) TMP
			) where rn between  #{begin} and #{end}

	</select>
	
	
	<!-- 상세 조회 -->
	
	 <select id="one" parameterType="int" resultMap="mbtiboardMap">
 		select * from mbti_board B
 		join member M on B.member_no = M.member_no
 		where mbti_board_no = #{mbtiBoardNo}
 	</select>
 	
 	<!--  게시글 작성을 위한 시퀀스 생성 -->
 	
 	<select id="sequence" resultType="int">
		select mbti_board_seq.nextval from dual
	</select>
	
	<!-- 게시글 작성 -->
	
	<insert id="write" parameterType="MbtiBoardDto">
		insert into mbti_board (
			mbti_board_no, member_no, mbti_board_title, mbti_board_content,
			mbti_board_time, mbti_board_vote1
			)
		values(
			#{mbtiBoardNo}, #{memberNo}, #{mbtiBoardTitle}, #{mbtiBoardContent},
			sysdate, 1
		)
		
	</insert>

	<!--  삭제 -->
	
	 	<delete id="delete" parameterType="int">
		delete mbti_board where mbti_board_no = #{mbtiBoardNo}
		</delete>
		
	<!-- mbtiboard만 단일조회 -->
	
		<select id="info" parameterType="int" resultType="MbtiBoardDto">
			select * from mbti_board where mbti_board_no = #{mbtiBoardNo}
		</select>
		
	<!--  수정 -->
	
		<update id="edit" parameterType="MbtiBoardDto">
			update mbti_board set mbti_board_title = #{mbtiBoardTitle},
				mbti_board_content = #{mbtiBoardContent}
			where mbti_board_no = #{mbtiBoardNo}
		</update>
		
 	<select id="count" parameterType="String" resultType="int">
 		select count(*) from mbti_board
 		<if test="keyword != null">
 		<![CDATA[
	 		where instr(mbti_board_title, #{keyword}) > 0
	 		or instr(mbti_board_content, #{keyword}) > 0
	 		]]>
	 	</if>
 	</select>
		
		
	<!-- main에서 사용할 best 3 게시글 -->
	
		<select id="bestMbtiBoard" resultMap="mbtiboardMap">
		 select * from (
		    select rownum RN, TMP.* from (
		            select m.member_animal, m.member_mbti, C.mbti_board_no, c.mbti_board_reply_count, c.mbti_board_title
		            	from mbti_board C
		           	 	inner join member M on M.member_no = C.member_no
		            order by c.mbti_board_reply_count desc           
		        ) TMP
		) where RN between 1 and 3
	</select>
		
</mapper>